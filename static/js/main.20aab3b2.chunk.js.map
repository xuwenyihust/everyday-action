{"version":3,"sources":["components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/Navigation.js","components/Layout/Layout.js","initialData.js","components/TodoList/Column/ColumnHeader/ColumnHeader.js","components/TodoList/Column/TodoForm/TodoForm.js","components/TodoList/Column/TodoItems/TodoItems.js","components/TodoList/Column/TodoItems/TodoItem/TodoItem.js","components/TodoList/Column/Column.js","components/TodoList/Column/TodoItems/TodoItem/TodoItemSummary/TodoItemSummary.js","components/UI/Modal/Modal.js","containers/TodoListBuilder/TodoListBuilder.js","App.js","serviceWorker.js","index.js"],"names":["navigationItem","props","className","href","link","active","children","navigationItems","navigation","layout","initialData","itemTypes","items","id","created_timestamp","content","type","due_date","moment","day","done","columns","title","taskIds","itemToSubmit","columnOrder","editingItem","itemUnderEditing","dueDatePickFocused","columnHeader","itemNum","todoForm","onSubmit","submitted","placeholder","value","onChange","inputChanged","todoItems","this","key","Component","todoItem","icon","dueDate","item","Icon","duePassed","fontSize","format","draggableId","toString","index","provided","snapshot","isDragging","draggableProps","dragHandleProps","ref","innerRef","onClick","contentClicked","editClicked","closeClicked","columnId","column","itemObjects","Object","keys","map","itemKey","length","e","formInputChanged","droppableId","droppableProps","todoItemSummary","itemTypeOptions","t","selected","itemSummaryContentChanged","itemSummaryTypeChanged","date","onDateChange","itemDueDateChanged","focused","onFocusChange","itemDueDateFocusChanged","itemDueDateDeleted","saveClicked","cancelClicked","modal","style","transform","show","opacity","TodoList","state","onDragEnd","result","destination","source","newTaskIds","Array","from","splice","newColumn","newState","setState","sourceColumn","destinationColumn","newSourceTaskIds","newDestinationTaskIds","newSourceColumn","newDestinationColumn","formInputChangeHandler","event","newItemToSubmit","target","addItemHandler","preventDefault","newItems","newId","Date","now","newItem","push","removeItemHandler","itemId","updatedItems","updatedColumn","updatedTaskIds","filter","console","log","editItemHandler","revertItemDoneHandler","updatedItem","itemSummaryContentChangeHandler","itemSummaryTypeChangeHandler","newItemUnderEditing","itemDueDateChangeHandler","itemDueDateFocusChangeHandler","itemDueDateDeleteHandler","editItemSaveHandler","editItemCancelHandler","taskId","dueDatePickDate","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.20aab3b2.chunk.js","sourcesContent":["import React from 'react';\nimport './NavigationItem.css';\n\nconst navigationItem = (props) => (\n    <li className='NavigationItem'>\n        <a \n            href={props.link}\n            className={props.active ? 'active' : null}>{props.children}</a>\n    </li>\n);\n\nexport default navigationItem;","import React from 'react'\nimport './NavigationItems.css';\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nconst navigationItems = (props) => (\n    <ul className='NavigationItems'>\n        <NavigationItem link=\"/\" active={true}>主页</NavigationItem>\n    </ul>\n);\n\nexport default navigationItems;","import React from 'react';\nimport './Navigation.css';\nimport NavigationItems from './NavigationItems/NavigationItems';\n\nconst navigation = () => (\n    <header className='Navigation'>\n        {/* <div>MENU</div> */}\n        <nav>\n            <NavigationItems />\n        </nav>\n    </header>\n);\n\nexport default navigation;","import React from 'react';\nimport './Layout.css';\nimport Navigation from '../Navigation/Navigation';\n\nconst layout = (props) => {\n\n    return (\n        <div>\n            <Navigation />\n            <main className=\"Content\">\n                {props.children}\n            </main>\n        </div>\n    )\n};\n\nexport default layout;\n","import moment from 'moment';\n\nconst initialData = {\n\n    itemTypes: [\"运动\", \"生活\", \"学习\", \"工作\", \"娱乐\"],\n    items: {\n        '1593920420073': {\n            id: '1593920420073',\n            created_timestamp: '1593920420073',\n            content: \"跑步\",\n            type: \"运动\",\n            due_date: moment().day(1),\n            done: false\n        },\n        '1593920427447': {\n            id: '1593920427447',\n            created_timestamp: '1593920420073',\n            content: \"混合有氧\",\n            type: \"运动\",\n            due_date: null,\n            done: false\n        },\n        '1593920442267': {\n            id: '1593920442267',\n            created_timestamp: '1593920420073',\n            content: \"洗牙\",\n            type: \"生活\",\n            due_date: null,\n            done: false\n        },\n        '1593988570469': {\n            id: '1593988570469',\n            created_timestamp: '1593988570469',\n            content: \"看书\",\n            type: \"学习\",\n            due_date: moment().day(-2),\n            done: false\n        },\n        '1594592079699': {\n            id: '1594592079699',\n            created_timestamp: '1594592079699',\n            content: \"最后生还者2\",\n            type: \"娱乐\",\n            due_date: moment().day(30),\n            done: false\n        }\n    },\n\n    columns: {\n        'column-1': {\n            id: 'column-1',\n            title: '感兴趣',\n            taskIds: ['1593920420073', '1593920427447'],\n            itemToSubmit: {\n                id: null,\n                content: \"新任务\",\n                type: null,\n                created_timestamp: null,\n                done: false\n            },\n        },\n        'column-2': {\n            id: 'column-2',\n            title: '行动中',\n            taskIds: ['1593920442267', '1593988570469', '1594592079699'],\n            itemToSubmit: {\n                id: null,\n                content: \"新任务\",\n                type: null,\n                created_timestamp: null,\n                done: false\n            },\n        },\n        'column-3': {\n            id: 'column-3',\n            title: '完成',\n            taskIds: [],\n            itemToSubmit: {\n                id: null,\n                content: \"新任务\",\n                type: null,\n                created_timestamp: null,\n                done: false\n            },\n        }\n    },\n\n    columnOrder: ['column-1', 'column-2', 'column-3'],\n\n    editingItem: false,\n    itemUnderEditing: {},\n    dueDatePickFocused: false\n}\n\nexport default initialData;","import React from 'react';\nimport './ColumnHeader.css';\n\nconst columnHeader = (props) => {\n    return (\n        <div className='ColumnHeader'>\n            {props.children}\n            <p>({props.itemNum})</p>\n        </div>\n    );\n}\n\nexport default columnHeader;","import React from 'react';\nimport './TodoForm.css';\n\nconst todoForm = (props) => (\n    <div className='TodoForm'>\n        <form onSubmit={props.submitted}>\n            <input \n                placeholder={props.value}\n                value={props.value}\n                onChange={props.inputChanged}></input>\n            <button type=\"submit\">+</button>\n        </form>\n    </div>\n);\n\nexport default todoForm;","import React, {Component} from 'react';\nimport './TodoItems.css';\n\nclass todoItems extends Component {\n\n    render () {\n        return (\n            <div className=\"TodoItems\">\n                <h4>{this.props.key}</h4>\n                <ul>\n                    {this.props.children}\n                </ul>\n            </div>\n        );\n    }\n};\n\nexport default todoItems;","import React, { Component } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport moment from 'moment';\nimport Icon from '@material-ui/core/Icon';\nimport DirectionsRunIcon from '@material-ui/icons/DirectionsRun';\nimport ImportContactsIcon from '@material-ui/icons/ImportContacts';\nimport AirlineSeatIndividualSuiteIcon from '@material-ui/icons/AirlineSeatIndividualSuite';\nimport LaptopChromebookIcon from '@material-ui/icons/LaptopChromebook';\nimport SportsEsportsIcon from '@material-ui/icons/SportsEsports';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport './TodoItem.css';\n\nclass todoItem extends Component {\n\n    render() {\n\n        let icon;\n        switch (this.props.item.type) {\n            case \"运动\":\n                icon = <DirectionsRunIcon />;\n                break;\n            case \"生活\":\n                icon = <AirlineSeatIndividualSuiteIcon />;\n                break;\n            case \"学习\":\n                icon = <ImportContactsIcon />;\n                break;\n            case \"工作\":\n                icon = <LaptopChromebookIcon />;\n                break;\n            case \"娱乐\":\n                icon = <SportsEsportsIcon />;\n                break;\n            default:\n                icon = <Icon>star</Icon>;\n                break;\n        }\n\n        let dueDate;\n        const currentDate = moment();\n        const duePassed = currentDate > this.props.item.due_date;\n\n        if (this.props.item.due_date && !duePassed) {\n            dueDate = <div className='DueDate good'>\n                        <AccessTimeIcon fontSize='small'/> \n                        <p>{this.props.item.due_date.format('L')}</p></div>;\n        } else if (this.props.item.due_date && duePassed) {\n            dueDate = <div className='DueDate passed'>\n                        <AccessTimeIcon fontSize='small'/> \n                        <p>{this.props.item.due_date.format('L')}</p></div>;\n        } else {\n            dueDate = null;\n        }\n\n        return (\n            <Draggable\n                draggableId={this.props.item.id.toString()}\n                index={this.props.index}>\n                    {(provided, snapshot) => (\n                        <div className={`TodoItem isDragging_${snapshot.isDragging}`}\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                            ref={provided.innerRef}\n                        >\n                            {icon}\n                            <p \n                                className={this.props.item.done ? 'done' : 'undone'}\n                                onClick={() => this.props.contentClicked(this.props.item.id)}>{this.props.item.content}</p>\n            \n                            <button\n                                type=\"button\" \n                                className=\"editButton\"\n                                onClick={() => this.props.editClicked(this.props.item.id)}><i className=\"fa fa-bars\"></i></button>\n                            <button \n                                type=\"button\" \n                                className=\"closeButton\"\n                                onClick={() => this.props.closeClicked(this.props.item.id, this.props.columnId)}><i className=\"fa fa-close\"></i></button>\n                            <div className=\"break\"></div>\n                            {dueDate}\n                        </div>\n                    )}\n            </Draggable>\n        );\n    };\n}\n\nexport default todoItem;","import React, {Component} from 'react';\nimport './Column.css';\nimport { Droppable } from 'react-beautiful-dnd';\nimport ColumnHeader from './ColumnHeader/ColumnHeader';\nimport TodoForm from './TodoForm/TodoForm';\nimport TodoItems from './TodoItems/TodoItems';\nimport TodoItem from './TodoItems/TodoItem/TodoItem';\n\nclass column extends Component {\n\n    render () {\n\n        const itemObjects = this.props.items;\n        const items = Object.keys(itemObjects).map((itemKey, index) => {\n            return <TodoItem \n                        columnId={this.props.column.id}\n                        key={itemObjects[itemKey].id} \n                        item={itemObjects[itemKey]} \n                        contentClicked={this.props.contentClicked} \n                        editClicked={this.props.editClicked} \n                        closeClicked={this.props.closeClicked}\n                        index={index}/>\n        })\n\n        return (\n            <div className='Column'>\n                <ColumnHeader\n                    itemNum={this.props.items.length}>\n                    <h3>{this.props.column.title}</h3></ColumnHeader>\n                <TodoForm \n                    value={this.props.column.itemToSubmit.content} \n                    inputChanged={(e) => this.props.formInputChanged(e,this. props.column.id)} \n                    submitted={(e) => this.props.submitted(e, this.props.column.id)}/>\n                <Droppable \n                    droppableId={this.props.column.id}>\n                    {(provided, snapshot) => (\n                        <div\n                            ref={provided.innerRef}\n                            {...provided.droppableProps}>\n                            <TodoItems>\n                                {items}\n                            </TodoItems>\n                            {provided.placeholder}\n                        </div>\n                        \n                    )}\n                </Droppable>\n            </div>\n        );\n    }\n}\n\nexport default column;","import React from 'react';\nimport 'react-dates/initialize';\nimport { SingleDatePicker } from 'react-dates';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport moment from 'moment';\nimport './TodoItemSummary.css';\n\nconst todoItemSummary = (props) => {\n\n    const item = props.item;\n\n    const itemTypes = props.itemTypes;\n    const itemTypeOptions = itemTypes.map(t => {\n        if (item.type === t) {\n            return (\n                <option key={t} value={t} selected=\"selected\">{t}</option>\n            )\n        } else {\n            return (\n                <option key={t} value={t}>{t}</option>\n            )\n        }\n    });\n\n    let dueDate;\n    if (props.item.due_date) {\n        dueDate = props.item.due_date;\n    } else {\n        dueDate = null;\n    }\n\n    return (\n        \n\n        <div className='TodoItemSummary'>\n\n            <form>\n                <label>内容：</label>\n                <input \n                    value={props.item.content}\n                    onChange={props.itemSummaryContentChanged}></input>\n            </form>\n\n            <form>\n                <label>类别：</label>\n                <select\n                    onChange={props.itemSummaryTypeChanged}>\n                    {itemTypeOptions}\n                </select>\n            </form>\n\n            <div className=\"DueDatePick\">\n                <p>截止日期: </p>\n                <SingleDatePicker\n                    date={dueDate} // momentPropTypes.momentObj or null\n                    onDateChange={(date) => props.itemDueDateChanged(date, item.id)} // PropTypes.func.isRequired\n                    focused={props.dueDatePickFocused} // PropTypes.bool\n                    onFocusChange={({ focused }) => props.itemDueDateFocusChanged({ focused })} // PropTypes.func.isRequired\n                    id=\"date_input\" // PropTypes.string.isRequired,\n                />\n                <DeleteIcon \n                    fontSize='medium'\n                    onClick={() => props.itemDueDateDeleted(item.id)}/>\n\n            </div>\n            \n\n            <button\n                type=\"button\"\n                className=\"saveButton\"\n                onClick={() => props.saveClicked(props.item)}>确定</button>\n            <button\n                type=\"button\" \n                className=\"cancelButton\"\n                onClick={() => props.cancelClicked()}>取消</button>\n        </div>\n\n    );\n};\n\nexport default todoItemSummary;","import React from 'react';\nimport './Modal.css';\n\nconst modal = (props) => (\n    <div\n        className='Modal'\n            style={{\n                transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                opacity: props.show ? '1' : '0'\n            }}>\n        {props.children}\n    </div>\n);\n\nexport default modal;","import React, {Component} from 'react';\nimport './TodoListBuilder.css';\nimport initialData from '../../initialData';\nimport 'react-dates/lib/css/_datepicker.css';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport Column from '../../components/TodoList/Column/Column';\nimport TodoItemSummary from '../../components/TodoList/Column/TodoItems/TodoItem/TodoItemSummary/TodoItemSummary';\nimport Modal from '../../components/UI/Modal/Modal';\n\nclass TodoList extends Component {\n\n    state = initialData;\n\n    onDragEnd = (result) => {\n        const { destination, source, draggableId } = result;\n\n        if (!destination) {\n            return;\n        }\n\n        if (destination.droppableId === source.droppableId &&\n            destination.index === source.index) {\n            return;\n        }\n\n        if (destination.droppableId === source.droppableId) {\n\n            const column = this.state.columns[source.droppableId];\n            const newTaskIds = Array.from(column.taskIds);\n            newTaskIds.splice(source.index, 1)\n            newTaskIds.splice(destination.index, 0, draggableId)\n\n            const newColumn = {\n                ... column,\n                taskIds: newTaskIds\n            };\n\n            const newState = {\n                ...this.state,\n                columns: {\n                    ...this.state.columns,\n                    [newColumn.id]: newColumn\n                }\n            };\n\n            this.setState(newState);\n        } else {\n\n            const sourceColumn = this.state.columns[source.droppableId];\n            const destinationColumn = this.state.columns[destination.droppableId];\n            const newSourceTaskIds = Array.from(sourceColumn.taskIds);\n            const newDestinationTaskIds = Array.from(destinationColumn.taskIds);\n\n            newSourceTaskIds.splice(source.index, 1)\n            newDestinationTaskIds.splice(destination.index, 0, draggableId)\n\n            const newSourceColumn = {\n                ... sourceColumn,\n                taskIds: newSourceTaskIds\n            };\n            const newDestinationColumn = {\n                ... destinationColumn,\n                taskIds: newDestinationTaskIds\n            };\n\n            const newState = {\n                ...this.state,\n                columns: {\n                    ...this.state.columns,\n                    [newSourceColumn.id]: newSourceColumn,\n                    [newDestinationColumn.id]: newDestinationColumn\n                }\n            };\n\n            this.setState(newState);\n        }\n\n    }\n\n    formInputChangeHandler = (event, columnId) => {\n        let columns = this.state.columns;\n        let column = {... columns[columnId]};\n        const newItemToSubmit = {\n            id: null,\n            created_timestamp: null,\n            content: event.target.value,\n            done: false\n        }\n        column.itemToSubmit = newItemToSubmit;\n        columns[columnId] = column;\n\n        this.setState({columns: columns})\n    }\n\n    addItemHandler = (event, columnId) => {\n        event.preventDefault();\n\n        let columns = this.state.columns;\n        let column = {... columns[columnId]};\n        const itemToSubmit = column.itemToSubmit;\n\n        if(itemToSubmit.content) {\n            let newItems = {... this.state.items};\n            const newId = Date.now().toString()\n            const newItem = {\n                id: newId,\n                created_timestamp: newId,\n                content: itemToSubmit.content,\n                done: false\n            }\n\n            column.taskIds.push(newItem.id);\n            columns[columnId] = column;\n\n            newItems[newId] = newItem;\n            this.setState({\n                items: newItems,\n                columns: columns});\n        }\n    }\n\n    removeItemHandler = (itemId, columnId) => {\n        // Need to remove from both items & columns.taskIds\n        let updatedItems = {... this.state.items};\n        delete updatedItems[itemId];\n\n        let columns = this.state.columns;\n        let updatedColumn = {... columns[columnId]};\n        const updatedTaskIds = updatedColumn.taskIds.filter(id =>\n            id !== itemId \n        );\n        updatedColumn.taskIds = updatedTaskIds;\n        columns[columnId] = updatedColumn;\n\n        console.log(columns);\n\n        this.setState({\n            items: updatedItems,\n            columns: columns\n        });\n    }\n\n    editItemHandler = (itemId) => {\n        const items = {... this.state.items}\n        const itemUnderEditing = items[itemId];\n\n        this.setState({\n            editingItem: true,\n            itemUnderEditing: {... itemUnderEditing}\n        })\n    }\n\n    revertItemDoneHandler = (itemId) => {\n        let updatedItems = {... this.state.items};\n        let updatedItem = updatedItems[itemId];\n        updatedItem.done = !updatedItem.done;\n\n        this.setState({items: updatedItems});\n    }\n\n    // Item Summary Modal\n    itemSummaryContentChangeHandler = (event) => {\n        let itemUnderEditing = this.state.itemUnderEditing;\n        itemUnderEditing.content = event.target.value;\n\n        this.setState({itemUnderEditing: itemUnderEditing})\n    }\n\n    itemSummaryTypeChangeHandler = (event) => {\n        const itemUnderEditing = this.state.itemUnderEditing;\n        const newItemUnderEditing = {\n            ... itemUnderEditing,\n            type: event.target.value\n        }\n\n        this.setState({itemUnderEditing: newItemUnderEditing})\n    }\n\n    itemDueDateChangeHandler = (date, itemId)  => {\n        const itemUnderEditing = this.state.itemUnderEditing;\n        const newItemUnderEditing = {\n            ... itemUnderEditing,\n            due_date: date\n        }\n\n        this.setState({itemUnderEditing: newItemUnderEditing})\n    }\n\n    itemDueDateFocusChangeHandler = ({ focused })  => {\n        this.setState({ dueDatePickFocused: focused });\n    }\n\n    itemDueDateDeleteHandler = () => {\n        const itemUnderEditing = this.state.itemUnderEditing;\n        const newItemUnderEditing = {\n            ... itemUnderEditing,\n            due_date: null\n        }\n\n        this.setState({itemUnderEditing: newItemUnderEditing})\n    }\n\n    editItemSaveHandler = (item) => {\n        let items = {... this.state.items};\n        items[item.id] = item;\n        \n        this.setState({\n            items: items,\n            editingItem: false,\n            itemUnderEditing: {}\n        })\n    }\n\n    editItemCancelHandler = () => {\n\n        this.setState({\n            editingItem: false,\n            itemUnderEditing: {}\n        })\n    }\n\n    render () {\n        const columns = this.state.columnOrder.map(columnId => {\n            const column = this.state.columns[columnId];\n            const items = column.taskIds.map(taskId => this.state.items[taskId]);\n\n            return <Column \n                        key={column.id}\n                        column={column}\n                        formInputChanged={this.formInputChangeHandler} \n                        submitted={this.addItemHandler}\n                        items={items} \n                        contentClicked={this.revertItemDoneHandler} \n                        editClicked={this.editItemHandler}\n                        closeClicked={this.removeItemHandler}/>\n        })\n\n        return (\n            <div className='TodoListBuilder'>\n                <Modal show={this.state.editingItem}>\n                    <TodoItemSummary \n                        itemTypes={this.state.itemTypes}\n                        item={this.state.itemUnderEditing}\n                        dueDatePickDate={this.state.dueDatePickDate}\n                        dueDatePickFocused={this.state.dueDatePickFocused}\n                        itemSummaryContentChanged={this.itemSummaryContentChangeHandler}\n                        itemSummaryTypeChanged={this.itemSummaryTypeChangeHandler}\n                        itemDueDateChanged={this.itemDueDateChangeHandler}\n                        itemDueDateFocusChanged={this.itemDueDateFocusChangeHandler}\n                        itemDueDateDeleted={this.itemDueDateDeleteHandler}\n                        saveClicked={this.editItemSaveHandler}\n                        cancelClicked={this.editItemCancelHandler}/>\n                </Modal>\n\n                <DragDropContext\n                    onDragEnd={this.onDragEnd}>\n                    {columns}\n                </DragDropContext>\n            </div>\n        )\n    }\n\n}\n\nexport default TodoList;","import React from 'react';\nimport './App.css';\nimport Layout from './components/Layout/Layout';\nimport TodoListBuilder from './containers/TodoListBuilder/TodoListBuilder';\n\nfunction App() {\n  return (\n    <div>\n      <Layout>\n        <TodoListBuilder />\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}