{"version":3,"sources":["components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/Navigation.js","components/Layout/Layout.js","initialData.js","components/TodoList/Column/ColumnHeader/ColumnHeader.js","components/TodoList/Column/TodoForm/TodoForm.js","components/TodoList/Column/TodoItems/TodoItems.js","components/TodoList/Column/TodoItems/TodoItem/TodoItem.js","components/TodoList/Column/Column.js","components/TodoList/Column/TodoItems/TodoItem/TodoItemSummary/SubTasks/SubTasks.js","components/TodoList/Column/TodoItems/TodoItem/TodoItemSummary/SubTasks/SubTask/SubTask.js","components/TodoList/Column/TodoItems/TodoItem/TodoItemSummary/TodoItemSummary.js","components/UI/Modal/Modal.js","containers/TodoListBuilder/TodoListBuilder.js","App.js","serviceWorker.js","index.js"],"names":["navigationItem","props","className","href","link","active","children","navigationItems","navigation","layout","initialData","itemTypes","items","id","created_timestamp","content","type","due_date","moment","day","sub_tasks","done","columns","title","taskIds","itemToSubmit","columnOrder","editingItem","itemUnderEditing","dueDatePickFocused","subTaskToSubmit","columnHeader","itemNum","todoForm","onSubmit","submitted","placeholder","value","onChange","inputChanged","todoItems","this","key","Component","todoItem","icon","dueDate","item","Icon","subTasks","duePassed","fontSize","format","subTaskObjects","Object","entries","length","doneTasksCount","keys","filter","subTaskKey","index","draggableId","toString","provided","snapshot","isDragging","draggableProps","dragHandleProps","ref","innerRef","onClick","editClicked","closeClicked","columnId","FormControlLabel","control","Checkbox","checked","contentClicked","name","color","column","itemObjects","map","itemKey","e","formInputChanged","droppableId","droppableProps","noValidate","autoComplete","subTaskAdded","TextField","defaultValue","margin","variant","subTaskInputChanged","subTask","subTaskChecked","InputBase","inputProps","subTaskEdited","subTaskClosed","todoItemSummary","itemTypeOptions","t","selected","itemSummaryContentChanged","itemSummaryTypeChanged","date","onDateChange","itemDueDateChanged","focused","onFocusChange","itemDueDateFocusChanged","itemDueDateDeleted","itemId","saveClicked","cancelClicked","modal","style","transform","show","opacity","TodoList","state","onDragEnd","result","destination","source","newTaskIds","Array","from","splice","newColumn","newState","setState","sourceColumn","destinationColumn","newSourceTaskIds","newDestinationTaskIds","newItems","newItem","newSourceColumn","newDestinationColumn","formInputChangeHandler","event","newItemToSubmit","target","addItemHandler","preventDefault","newId","Date","now","push","removeItemHandler","updatedItems","updatedColumn","updatedTaskIds","console","log","editItemHandler","revertItemDoneHandler","updatedItem","itemSummaryContentChangeHandler","itemSummaryTypeChangeHandler","newItemUnderEditing","itemDueDateChangeHandler","itemDueDateFocusChangeHandler","itemDueDateDeleteHandler","itemSubTaskCheckedHandler","newSubTask","newSubTasks","itemSubTaskInputChanged","newSubTaskToSubmit","itemSubTaskAddHandler","newSubTaskToSubmitId","itemSubTaskEdited","itemSubTaskCloseHandler","editItemSaveHandler","editItemCancelHandler","taskId","dueDatePickDate","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f59376c3.chunk.js","sourcesContent":["import React from 'react';\nimport './NavigationItem.css';\n\nconst navigationItem = (props) => (\n    <li className='NavigationItem'>\n        <a \n            href={props.link}\n            className={props.active ? 'active' : null}>{props.children}</a>\n    </li>\n);\n\nexport default navigationItem;","import React from 'react'\nimport './NavigationItems.css';\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nconst navigationItems = (props) => (\n    <ul className='NavigationItems'>\n        <NavigationItem link=\"/\" active={true}>主页</NavigationItem>\n    </ul>\n);\n\nexport default navigationItems;","import React from 'react';\nimport './Navigation.css';\nimport NavigationItems from './NavigationItems/NavigationItems';\n\nconst navigation = () => (\n    <header className='Navigation'>\n        {/* <div>MENU</div> */}\n        <nav>\n            <NavigationItems />\n        </nav>\n    </header>\n);\n\nexport default navigation;","import React from 'react';\nimport './Layout.css';\nimport Navigation from '../Navigation/Navigation';\n\nconst layout = (props) => {\n\n    return (\n        <div>\n            <Navigation />\n            <main className=\"Content\">\n                {props.children}\n            </main>\n        </div>\n    )\n};\n\nexport default layout;\n","import moment from 'moment';\n\nconst initialData = {\n\n    itemTypes: [\"运动\", \"生活\", \"学习\", \"工作\", \"娱乐\"],\n    items: {\n        '1593920420073': {\n            id: '1593920420073',\n            created_timestamp: '1593920420073',\n            content: \"跑步\",\n            type: \"运动\",\n            due_date: moment().day(1),\n            sub_tasks: {},\n            done: false\n        },\n        '1593920427447': {\n            id: '1593920427447',\n            created_timestamp: '1593920420073',\n            content: \"混合有氧\",\n            type: \"运动\",\n            due_date: null,\n            sub_tasks: {},\n            done: false\n        },\n        '1593920442267': {\n            id: '1593920442267',\n            created_timestamp: '1593920420073',\n            content: \"洗牙\",\n            type: \"生活\",\n            due_date: null,\n            sub_tasks: {},\n            done: false\n        },\n        '1593988570469': {\n            id: '1593988570469',\n            created_timestamp: '1593988570469',\n            content: \"课程 MIT Introduction to Deep Learning\",\n            type: \"学习\",\n            due_date: moment().day(-2),\n            sub_tasks: {\n                '1595192263174': {\n                    content: \"第一集\",\n                    done: true\n                },\n                '1595192276071': {\n                    content: \"第二集\",\n                    done: false\n                },\n                '1595192284200': {\n                    content: \"第三集\",\n                    done: false\n                }\n            },\n            done: false\n        },\n        '1594592079699': {\n            id: '1594592079699',\n            created_timestamp: '1594592079699',\n            content: \"最后生还者2\",\n            type: \"娱乐\",\n            due_date: moment().day(30),\n            sub_tasks: {},\n            done: false\n        }\n    },\n\n    columns: {\n        '感兴趣': {\n            id: '感兴趣',\n            title: '感兴趣',\n            taskIds: ['1593920420073', '1593920427447'],\n            itemToSubmit: {\n                id: null,\n                content: \"新任务\",\n                type: null,\n                created_timestamp: null,\n                done: false\n            },\n        },\n        '行动中': {\n            id: '行动中',\n            title: '行动中',\n            taskIds: ['1593920442267', '1593988570469', '1594592079699'],\n            itemToSubmit: {\n                id: null,\n                content: \"新任务\",\n                type: null,\n                created_timestamp: null,\n                done: false\n            },\n        },\n        '完成': {\n            id: '完成',\n            title: '完成',\n            taskIds: [],\n            itemToSubmit: {\n                id: null,\n                content: \"新任务\",\n                type: null,\n                created_timestamp: null,\n                done: false\n            },\n        }\n    },\n\n    columnOrder: ['感兴趣', '行动中', '完成'],\n\n    editingItem: false,\n    itemUnderEditing: {},\n    dueDatePickFocused: false,\n\n    subTaskToSubmit: {}\n}\n\nexport default initialData;","import React from 'react';\nimport './ColumnHeader.css';\n\nconst columnHeader = (props) => {\n    return (\n        <div className='ColumnHeader'>\n            {props.children}\n            <p>({props.itemNum})</p>\n        </div>\n    );\n}\n\nexport default columnHeader;","import React from 'react';\nimport './TodoForm.css';\n\nconst todoForm = (props) => (\n    <div className='TodoForm'>\n        <form onSubmit={props.submitted}>\n            <input \n                placeholder={props.value}\n                value={props.value}\n                onChange={props.inputChanged}></input>\n            <button type=\"submit\">+</button>\n        </form>\n    </div>\n);\n\nexport default todoForm;","import React, {Component} from 'react';\nimport './TodoItems.css';\n\nclass todoItems extends Component {\n\n    render () {\n        return (\n            <div className=\"TodoItems\">\n                <h4>{this.props.key}</h4>\n                <ul>\n                    {this.props.children}\n                </ul>\n            </div>\n        );\n    }\n};\n\nexport default todoItems;","import React, { Component } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport moment from 'moment';\nimport Icon from '@material-ui/core/Icon';\nimport DirectionsRunIcon from '@material-ui/icons/DirectionsRun';\nimport ImportContactsIcon from '@material-ui/icons/ImportContacts';\nimport AirlineSeatIndividualSuiteIcon from '@material-ui/icons/AirlineSeatIndividualSuite';\nimport LaptopChromebookIcon from '@material-ui/icons/LaptopChromebook';\nimport SportsEsportsIcon from '@material-ui/icons/SportsEsports';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport './TodoItem.css';\n\nclass todoItem extends Component {\n\n    render() {\n\n        let icon;\n        switch (this.props.item.type) {\n            case \"运动\":\n                icon = <DirectionsRunIcon />;\n                break;\n            case \"生活\":\n                icon = <AirlineSeatIndividualSuiteIcon />;\n                break;\n            case \"学习\":\n                icon = <ImportContactsIcon />;\n                break;\n            case \"工作\":\n                icon = <LaptopChromebookIcon />;\n                break;\n            case \"娱乐\":\n                icon = <SportsEsportsIcon />;\n                break;\n            default:\n                icon = <Icon>star</Icon>;\n                break;\n        }\n\n        // Due date\n        let dueDate;\n        const currentDate = moment();\n        const duePassed = currentDate > this.props.item.due_date;\n\n        if (this.props.item.due_date && !duePassed) {\n            dueDate = <div className='DueDate good'>\n                        <AccessTimeIcon fontSize='small'/> \n                        <p>{this.props.item.due_date.format('L')}</p></div>;\n        } else if (this.props.item.due_date && duePassed) {\n            dueDate = <div className='DueDate passed'>\n                        <AccessTimeIcon fontSize='small'/> \n                        <p>{this.props.item.due_date.format('L')}</p></div>;\n        } else {\n            dueDate = null;\n        }\n\n        // Subtasks\n        let subTasks;\n        const subTaskObjects = this.props.item.sub_tasks;\n        const hasSubTasks = Object.entries(subTaskObjects).length !== 0; \n        if (hasSubTasks) {\n            const doneTasksCount = Object.keys(subTaskObjects).filter((subTaskKey, index) => \n                subTaskObjects[subTaskKey].done === true).length;\n            subTasks = <div className='SubTaskIcon'>\n                        <AssignmentTurnedInIcon fontSize='small'/>\n                        <p>{doneTasksCount}/{Object.keys(subTaskObjects).length}</p></div>\n        } else {\n            subTasks = null;\n        }\n\n        return (\n            <Draggable\n                draggableId={this.props.item.id.toString()}\n                index={this.props.index}>\n                    {(provided, snapshot) => (\n                        <div className={`TodoItem isDragging_${snapshot.isDragging}`}\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                            ref={provided.innerRef}>\n                            {icon}\n                            <p \n                                className={this.props.item.done ? 'done' : 'undone'}\n                                onClick={() => this.props.editClicked(this.props.item.id)}>{this.props.item.content}</p>\n                            <button \n                                type=\"button\" \n                                className=\"closeButton\"\n                                onClick={() => this.props.closeClicked(this.props.item.id, this.props.columnId)}><i className=\"fa fa-close\"></i></button>\n                            <div className=\"break\"></div>\n                            {dueDate}\n                            {subTasks}\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={this.props.item.done}\n                                        onChange={() => this.props.contentClicked(this.props.item.id, this.props.columnId)}\n                                        name=\"checkedB\"\n                                        color=\"primary\"/>\n                                }\n                            />\n                        </div>\n                    )}\n            </Draggable>\n        );\n    };\n}\n\nexport default todoItem;","import React, {Component} from 'react';\nimport './Column.css';\nimport { Droppable } from 'react-beautiful-dnd';\nimport ColumnHeader from './ColumnHeader/ColumnHeader';\nimport TodoForm from './TodoForm/TodoForm';\nimport TodoItems from './TodoItems/TodoItems';\nimport TodoItem from './TodoItems/TodoItem/TodoItem';\n\nclass column extends Component {\n\n    render () {\n\n        const itemObjects = this.props.items;\n        const items = Object.keys(itemObjects).map((itemKey, index) => {\n            return <TodoItem \n                        columnId={this.props.column.id}\n                        key={itemObjects[itemKey].id} \n                        item={itemObjects[itemKey]} \n                        contentClicked={this.props.contentClicked} \n                        editClicked={this.props.editClicked} \n                        closeClicked={this.props.closeClicked}\n                        index={index}/>\n        })\n\n        return (\n            <div className='Column'>\n                <ColumnHeader\n                    itemNum={this.props.items.length}>\n                    <h3>{this.props.column.title}</h3></ColumnHeader>\n                <TodoForm \n                    value={this.props.column.itemToSubmit.content} \n                    inputChanged={(e) => this.props.formInputChanged(e,this. props.column.id)} \n                    submitted={(e) => this.props.submitted(e, this.props.column.id)}/>\n                <Droppable \n                    droppableId={this.props.column.id}>\n                    {(provided, snapshot) => (\n                        <div\n                            ref={provided.innerRef}\n                            {...provided.droppableProps}>\n                            <TodoItems>\n                                {items}\n                            </TodoItems>\n                            {provided.placeholder}\n                        </div>\n                        \n                    )}\n                </Droppable>\n            </div>\n        );\n    }\n}\n\nexport default column;","import React from 'react';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport TextField from '@material-ui/core/TextField';\nimport './SubTasks.css';\n\nconst subTasks = (props) => {\n    return (\n        <div className='SubTasks'>\n            <p>子任务:</p> \n            <form noValidate \n                autoComplete=\"off\"\n                onSubmit={(e) => props.subTaskAdded(e)}>\n                <TextField \n                    id=\"outlined-margin-dense\" \n                    defaultValue=\"新子任务\"\n                    margin='dense'\n                    variant=\"outlined\" \n                    onChange={(e) => props.subTaskInputChanged(e)}/>\n                <button type=\"submit\">+</button>\n            </form>\n            <ul>\n                {props.children}\n            </ul>\n        </div>\n    );\n}\n\nexport default subTasks;","import React from 'react';\nimport InputBase from '@material-ui/core/InputBase';\nimport './SubTask.css';\n\nconst subTask = (props) => {\n    return (\n        <div className='SubTask'>\n            <li className={props.checked ? 'done' : 'undone'}><input \n                    type=\"checkbox\" \n                    checked={props.checked}\n                    onChange={() => props.subTaskChecked(props.subTaskKey)}/>\n                    <InputBase\n                        defaultValue=\"Naked input\"\n                        value={props.content}\n                        inputProps={{ 'aria-label': 'naked' }}\n                        onChange={(e) => props.subTaskEdited(e, props.subTaskKey)}\n                    /></li>\n                    {/* {props.content}</li> */}\n            <button \n                type=\"button\" \n                className=\"closeButton\"\n                onClick={() => props.subTaskClosed( props.subTaskKey)}><i className=\"fa fa-close\"></i></button>\n        </div>\n    );\n}\n\nexport default subTask;\n\n","import React from 'react';\nimport 'react-dates/initialize';\nimport { SingleDatePicker } from 'react-dates';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport moment from 'moment';\nimport SubTasks from './SubTasks/SubTasks';\nimport SubTask from './SubTasks/SubTask/SubTask';\nimport './TodoItemSummary.css';\n\nconst todoItemSummary = (props) => {\n\n    const item = props.item;\n\n    const itemTypes = props.itemTypes;\n    const itemTypeOptions = itemTypes.map(t => {\n        if (item.type === t) {\n            return (\n                <option key={t} value={t} selected=\"selected\">{t}</option>\n            )\n        } else {\n            return (\n                <option key={t} value={t}>{t}</option>\n            )\n        }\n    });\n\n    let dueDate;\n    if (props.item.due_date) {\n        dueDate = props.item.due_date;\n    } else {\n        dueDate = null;\n    }\n\n    const subTaskObjects = props.item.sub_tasks;\n    let subTasks;\n    if (subTaskObjects) {\n        const hasSubTasks = Object.entries(subTaskObjects).length !== 0;\n        subTasks = Object.keys(subTaskObjects).map((subTaskKey) => {\n            return <SubTask \n                        key={subTaskKey}\n                        itemKey={props.item.id}\n                        subTaskKey={subTaskKey}\n                        content={subTaskObjects[subTaskKey].content}\n                        checked={subTaskObjects[subTaskKey].done}\n                        subTaskChecked={props.subTaskChecked}\n                        subTaskEdited={props.subTaskEdited}\n                        subTaskClosed={props.subTaskClosed}/>\n        });\n    }\n\n    return (\n    \n        <div className='TodoItemSummary'>\n\n            <div className='Content'>\n                <form>\n                    <input \n                        value={props.item.content}\n                        onChange={props.itemSummaryContentChanged}></input>\n                </form>\n            </div>\n\n            <div className='Type'>\n                <form>\n                    <label>类别: </label>\n                    <select\n                        onChange={props.itemSummaryTypeChanged}>\n                        {itemTypeOptions}\n                    </select>\n                </form>\n            </div>\n\n            <div className=\"DueDatePick\">\n                <p>截止日期: </p>\n                <div className=\"Pick\">\n                    <SingleDatePicker\n                        date={dueDate} // momentPropTypes.momentObj or null\n                        onDateChange={(date) => props.itemDueDateChanged(date, item.id)} // PropTypes.func.isRequired\n                        focused={props.dueDatePickFocused} // PropTypes.bool\n                        onFocusChange={({ focused }) => props.itemDueDateFocusChanged({ focused })} // PropTypes.func.isRequired\n                        id=\"date_input\" // PropTypes.string.isRequired,\n                    />\n                    <DeleteIcon \n                        fontSize='medium'\n                        onClick={() => props.itemDueDateDeleted(item.id)}/>\n                </div>\n\n            </div>\n\n            <SubTasks\n                itemId = {props.item.id}\n                subTaskAdded={props.subTaskAdded}\n                subTaskInputChanged={props.subTaskInputChanged}>\n                {subTasks}\n            </SubTasks>\n\n            <button\n                type=\"button\"\n                className=\"saveButton\"\n                onClick={() => props.saveClicked(props.item)}>确定</button>\n            <button\n                type=\"button\" \n                className=\"cancelButton\"\n                onClick={() => props.cancelClicked()}>取消</button>\n        </div>\n\n    );\n};\n\nexport default todoItemSummary;","import React from 'react';\nimport './Modal.css';\n\nconst modal = (props) => (\n    <div\n        className='Modal'\n            style={{\n                transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                opacity: props.show ? '1' : '0'\n            }}>\n        {props.children}\n    </div>\n);\n\nexport default modal;","import React, {Component} from 'react';\nimport './TodoListBuilder.css';\nimport initialData from '../../initialData';\nimport 'react-dates/lib/css/_datepicker.css';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport Column from '../../components/TodoList/Column/Column';\nimport TodoItemSummary from '../../components/TodoList/Column/TodoItems/TodoItem/TodoItemSummary/TodoItemSummary';\nimport Modal from '../../components/UI/Modal/Modal';\n\nclass TodoList extends Component {\n\n    state = initialData;\n\n    onDragEnd = (result) => {\n        const { destination, source, draggableId } = result;\n\n        if (!destination) {\n            return;\n        }\n\n        if (destination.droppableId === source.droppableId &&\n            destination.index === source.index) {\n            return;\n        }\n\n        if (destination.droppableId === source.droppableId) {\n\n            const column = this.state.columns[source.droppableId];\n            const newTaskIds = Array.from(column.taskIds);\n            newTaskIds.splice(source.index, 1)\n            newTaskIds.splice(destination.index, 0, draggableId)\n\n            const newColumn = {\n                ... column,\n                taskIds: newTaskIds\n            };\n\n            const newState = {\n                ...this.state,\n                columns: {\n                    ...this.state.columns,\n                    [newColumn.id]: newColumn\n                }\n            };\n            this.setState(newState);\n        } else {\n            const sourceColumn = this.state.columns[source.droppableId];\n            const destinationColumn = this.state.columns[destination.droppableId];\n            const newSourceTaskIds = Array.from(sourceColumn.taskIds);\n            const newDestinationTaskIds = Array.from(destinationColumn.taskIds);\n\n            const newItems = {... this.state.items}\n            let newItem = newItems[draggableId];\n            // Auto be done if moved to DONE\n            if (destinationColumn.title === '完成') {\n                newItem.done = true;\n            } else if (sourceColumn.title === '完成' && newItem.done === true) {\n                newItem.done = false;\n            }\n\n            newSourceTaskIds.splice(source.index, 1)\n            newDestinationTaskIds.splice(destination.index, 0, draggableId)\n\n            const newSourceColumn = {\n                ... sourceColumn,\n                taskIds: newSourceTaskIds\n            };\n            const newDestinationColumn = {\n                ... destinationColumn,\n                taskIds: newDestinationTaskIds\n            };\n\n            const newState = {\n                ...this.state,\n                items: newItems,\n                columns: {\n                    ...this.state.columns,\n                    [newSourceColumn.id]: newSourceColumn,\n                    [newDestinationColumn.id]: newDestinationColumn\n                }\n            };\n\n            this.setState(newState);\n        }\n\n    }\n\n    formInputChangeHandler = (event, columnId) => {\n        let columns = this.state.columns;\n        let column = {... columns[columnId]};\n        const newItemToSubmit = {\n            id: null,\n            created_timestamp: null,\n            content: event.target.value,\n            done: false\n        }\n        column.itemToSubmit = newItemToSubmit;\n        columns[columnId] = column;\n\n        this.setState({columns: columns})\n    }\n\n    addItemHandler = (event, columnId) => {\n        event.preventDefault();\n\n        let columns = this.state.columns;\n        let column = {... columns[columnId]};\n        const itemToSubmit = column.itemToSubmit;\n\n        if(itemToSubmit.content) {\n            let newItems = {... this.state.items};\n            const newId = Date.now().toString()\n            const newItem = {\n                id: newId,\n                created_timestamp: newId,\n                content: itemToSubmit.content,\n                type: null,\n                due_date: null,\n                sub_tasks: {},\n                done: false\n            }\n\n            column.taskIds.push(newItem.id);\n            columns[columnId] = column;\n\n            newItems[newId] = newItem;\n            this.setState({\n                items: newItems,\n                columns: columns});\n        }\n    }\n\n    removeItemHandler = (itemId, columnId) => {\n        // Need to remove from both items & columns.taskIds\n        let updatedItems = {... this.state.items};\n        delete updatedItems[itemId];\n\n        let columns = this.state.columns;\n        let updatedColumn = {... columns[columnId]};\n        const updatedTaskIds = updatedColumn.taskIds.filter(id =>\n            id !== itemId \n        );\n        updatedColumn.taskIds = updatedTaskIds;\n        columns[columnId] = updatedColumn;\n\n        console.log(columns);\n\n        this.setState({\n            items: updatedItems,\n            columns: columns\n        });\n    }\n\n    editItemHandler = (itemId) => {\n        const items = {\n            ... this.state.items\n        };\n        const itemUnderEditing = {\n            ... items[itemId],\n            sub_tasks: {... items[itemId].sub_tasks}\n        };\n\n        this.setState({\n            editingItem: true,\n            itemUnderEditing: {... itemUnderEditing}\n        })\n    }\n\n    revertItemDoneHandler = (itemId, columnId) => {\n        let updatedItems = {... this.state.items};\n        let updatedItem = updatedItems[itemId];\n        if (updatedItem.done === false) {\n            updatedItem.done = true;\n\n            const sourceColumn = this.state.columns[columnId];\n            const destinationColumn = this.state.columns[\"完成\"];\n\n            const newSourceTaskIds = sourceColumn.taskIds.filter(id => id !== itemId);\n            const newDestinationTaskIds = [... destinationColumn.taskIds]\n            newDestinationTaskIds.push(itemId)\n\n            console.log(newSourceTaskIds);\n            console.log(newDestinationTaskIds);\n\n            const newSourceColumn = {\n                ... sourceColumn,\n                taskIds: newSourceTaskIds\n            };\n            const newDestinationColumn = {\n                ... destinationColumn,\n                taskIds: newDestinationTaskIds\n            };\n\n            const newState = {\n                ...this.state,\n                items: updatedItems,\n                columns: {\n                    ...this.state.columns,\n                    [newSourceColumn.id]: newSourceColumn,\n                    [newDestinationColumn.id]: newDestinationColumn\n                }\n            };\n            this.setState(newState);\n        }\n    }\n\n    // Item Summary Modal\n    itemSummaryContentChangeHandler = (event) => {\n        let itemUnderEditing = this.state.itemUnderEditing;\n        itemUnderEditing.content = event.target.value;\n\n        this.setState({itemUnderEditing: itemUnderEditing})\n    }\n\n    itemSummaryTypeChangeHandler = (event) => {\n        const itemUnderEditing = this.state.itemUnderEditing;\n        const newItemUnderEditing = {\n            ... itemUnderEditing,\n            type: event.target.value\n        }\n\n        this.setState({itemUnderEditing: newItemUnderEditing})\n    }\n\n    itemDueDateChangeHandler = (date, itemId)  => {\n        const itemUnderEditing = this.state.itemUnderEditing;\n        const newItemUnderEditing = {\n            ... itemUnderEditing,\n            due_date: date\n        }\n\n        this.setState({itemUnderEditing: newItemUnderEditing})\n    }\n\n    itemDueDateFocusChangeHandler = ({ focused })  => {\n        this.setState({ dueDatePickFocused: focused });\n    }\n\n    itemDueDateDeleteHandler = () => {\n        const itemUnderEditing = this.state.itemUnderEditing;\n        const newItemUnderEditing = {\n            ... itemUnderEditing,\n            due_date: null\n        }\n\n        this.setState({itemUnderEditing: newItemUnderEditing})\n    }\n\n    itemSubTaskCheckedHandler = (subTaskKey) => {\n        const itemUnderEditing = this.state.itemUnderEditing;\n\n        const newSubTask = {\n            ... itemUnderEditing.sub_tasks[subTaskKey],\n            done: !itemUnderEditing.sub_tasks[subTaskKey].done\n        }\n        let newSubTasks = itemUnderEditing.sub_tasks;\n        newSubTasks[subTaskKey] = newSubTask;\n\n        const newItemUnderEditing = {\n            ... itemUnderEditing,\n            sub_tasks: newSubTasks\n        }\n        this.setState({itemUnderEditing: newItemUnderEditing})\n    }\n\n    itemSubTaskInputChanged = (event) => {\n        const newSubTaskToSubmit = {\n            content: event.target.value,\n            done: false\n        }\n        this.setState({subTaskToSubmit: newSubTaskToSubmit});\n    }\n\n    itemSubTaskAddHandler = (event) => {\n        event.preventDefault();\n\n        const itemUnderEditing = this.state.itemUnderEditing;\n\n        let subTasks = itemUnderEditing.sub_tasks;\n        const newSubTaskToSubmitId = Date.now().toString();\n        subTasks[newSubTaskToSubmitId] = this.state.subTaskToSubmit\n        console.log(subTasks[newSubTaskToSubmitId]);\n\n        if (Object.entries(subTasks[newSubTaskToSubmitId]).length === 0) {\n            subTasks[newSubTaskToSubmitId] = {\n                content: \"新子任务\",\n                done: false\n            };\n        }\n\n        const newItemUnderEditing = {\n            ... itemUnderEditing,\n            sub_tasks: subTasks\n        }\n\n        this.setState({itemUnderEditing: newItemUnderEditing});\n    }\n\n    itemSubTaskEdited = (event, subTaskKey) => {\n        const itemUnderEditing = this.state.itemUnderEditing;\n\n        let subTasks = {... itemUnderEditing.sub_tasks};\n        subTasks[subTaskKey] = {\n            ... subTasks[subTaskKey],\n            content: event.target.value\n        };\n\n        const newItemUnderEditing = {\n            ... itemUnderEditing,\n            sub_tasks: subTasks\n        }\n        this.setState({itemUnderEditing: newItemUnderEditing});\n    }\n\n    itemSubTaskCloseHandler = (subTaskKey) => {\n        const itemUnderEditing = this.state.itemUnderEditing;\n\n        let subTasks = itemUnderEditing.sub_tasks;\n        delete subTasks[subTaskKey];\n\n        const newItemUnderEditing = {\n            ... itemUnderEditing,\n            sub_tasks: subTasks\n        }\n\n        this.setState({itemUnderEditing: newItemUnderEditing});\n    }\n\n    // Save/Cancel Button\n    editItemSaveHandler = (item) => {\n        let items = {... this.state.items};\n        items[item.id] = item;\n        \n        this.setState({\n            items: items,\n            editingItem: false,\n            itemUnderEditing: {}\n        })\n    }\n\n    editItemCancelHandler = () => {\n        this.setState({\n            editingItem: false,\n            itemUnderEditing: {}\n        })\n    }\n\n    render () {\n        const columns = this.state.columnOrder.map(columnId => {\n            const column = this.state.columns[columnId];\n            const items = column.taskIds.map(taskId => this.state.items[taskId]);\n\n            return <Column \n                        key={column.id}\n                        column={column}\n                        formInputChanged={this.formInputChangeHandler} \n                        submitted={this.addItemHandler}\n                        items={items} \n                        contentClicked={this.revertItemDoneHandler} \n                        editClicked={this.editItemHandler}\n                        closeClicked={this.removeItemHandler}/>\n        })\n\n        return (\n            <div className='TodoListBuilder'>\n                <Modal show={this.state.editingItem}>\n                    <TodoItemSummary \n                        itemTypes={this.state.itemTypes}\n                        item={this.state.itemUnderEditing}\n                        dueDatePickDate={this.state.dueDatePickDate}\n                        dueDatePickFocused={this.state.dueDatePickFocused}\n                        itemSummaryContentChanged={this.itemSummaryContentChangeHandler}\n                        itemSummaryTypeChanged={this.itemSummaryTypeChangeHandler}\n                        itemDueDateChanged={this.itemDueDateChangeHandler}\n                        itemDueDateFocusChanged={this.itemDueDateFocusChangeHandler}\n                        itemDueDateDeleted={this.itemDueDateDeleteHandler}\n                        subTaskChecked={this.itemSubTaskCheckedHandler}\n                        subTaskInputChanged={this.itemSubTaskInputChanged}\n                        subTaskAdded={this.itemSubTaskAddHandler}\n                        subTaskEdited={this.itemSubTaskEdited}\n                        subTaskClosed={this.itemSubTaskCloseHandler}\n                        saveClicked={this.editItemSaveHandler}\n                        cancelClicked={this.editItemCancelHandler}/>\n                </Modal>\n\n                <DragDropContext\n                    onDragEnd={this.onDragEnd}>\n                    {columns}\n                </DragDropContext>\n            </div>\n        )\n    }\n\n}\n\nexport default TodoList;","import React from 'react';\nimport './App.css';\nimport Layout from './components/Layout/Layout';\nimport TodoListBuilder from './containers/TodoListBuilder/TodoListBuilder';\n\nfunction App() {\n  return (\n    <div>\n      <Layout>\n        <TodoListBuilder />\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}