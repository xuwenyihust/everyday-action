{"version":3,"sources":["components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/Navigation.js","components/Layout/Layout.js","initialData.js","components/TodoList/Column/ColumnHeader/ColumnHeader.js","components/TodoList/Column/TodoForm/TodoForm.js","components/TodoList/Column/TodoItems/TodoItems.js","components/TodoList/Column/TodoItems/TodoItem/TodoItem.js","components/TodoList/Column/Column.js","components/TodoList/Column/TodoItems/TodoItem/TodoItemSummary/SubTasks/SubTask/SubTask.js","components/TodoList/Column/TodoItems/TodoItem/TodoItemSummary/SubTasks/SubTasks.js","components/TodoList/Column/TodoItems/TodoItem/TodoItemSummary/TodoItemSummary.js","components/UI/Modal/Modal.js","containers/TodoListBuilder/TodoListBuilder.js","App.js","serviceWorker.js","index.js"],"names":["navigationItem","props","className","href","link","active","children","navigationItems","navigation","layout","initialData","itemTypes","items","id","created_timestamp","content","type","due_date","moment","day","sub_tasks","done","columns","title","taskIds","itemToSubmit","columnOrder","editingItem","itemUnderEditing","dueDatePickFocused","columnHeader","itemNum","todoForm","onSubmit","submitted","placeholder","value","onChange","inputChanged","todoItems","this","key","Component","todoItem","icon","dueDate","item","Icon","subTasks","duePassed","fontSize","format","subTaskObjects","Object","entries","length","doneTasksCount","keys","filter","subTaskKey","index","draggableId","toString","provided","snapshot","isDragging","draggableProps","dragHandleProps","ref","innerRef","onClick","contentClicked","editClicked","closeClicked","columnId","column","itemObjects","map","itemKey","e","formInputChanged","droppableId","droppableProps","subTask","checked","subTaskClicked","todoItemSummary","itemTypeOptions","t","selected","itemSummaryContentChanged","itemSummaryTypeChanged","date","onDateChange","itemDueDateChanged","focused","onFocusChange","itemDueDateFocusChanged","itemDueDateDeleted","saveClicked","cancelClicked","modal","style","transform","show","opacity","TodoList","state","onDragEnd","result","destination","source","newTaskIds","Array","from","splice","newColumn","newState","setState","sourceColumn","destinationColumn","newSourceTaskIds","newDestinationTaskIds","newSourceColumn","newDestinationColumn","formInputChangeHandler","event","newItemToSubmit","target","addItemHandler","preventDefault","newItems","newId","Date","now","newItem","push","removeItemHandler","itemId","updatedItems","updatedColumn","updatedTaskIds","console","log","editItemHandler","revertItemDoneHandler","updatedItem","itemSummaryContentChangeHandler","itemSummaryTypeChangeHandler","newItemUnderEditing","itemDueDateChangeHandler","itemDueDateFocusChangeHandler","itemDueDateDeleteHandler","itemSubTaskClickHandler","newSubTask","newSubTasks","editItemSaveHandler","editItemCancelHandler","taskId","dueDatePickDate","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3e60b04c.chunk.js","sourcesContent":["import React from 'react';\nimport './NavigationItem.css';\n\nconst navigationItem = (props) => (\n    <li className='NavigationItem'>\n        <a \n            href={props.link}\n            className={props.active ? 'active' : null}>{props.children}</a>\n    </li>\n);\n\nexport default navigationItem;","import React from 'react'\nimport './NavigationItems.css';\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nconst navigationItems = (props) => (\n    <ul className='NavigationItems'>\n        <NavigationItem link=\"/\" active={true}>主页</NavigationItem>\n    </ul>\n);\n\nexport default navigationItems;","import React from 'react';\nimport './Navigation.css';\nimport NavigationItems from './NavigationItems/NavigationItems';\n\nconst navigation = () => (\n    <header className='Navigation'>\n        {/* <div>MENU</div> */}\n        <nav>\n            <NavigationItems />\n        </nav>\n    </header>\n);\n\nexport default navigation;","import React from 'react';\nimport './Layout.css';\nimport Navigation from '../Navigation/Navigation';\n\nconst layout = (props) => {\n\n    return (\n        <div>\n            <Navigation />\n            <main className=\"Content\">\n                {props.children}\n            </main>\n        </div>\n    )\n};\n\nexport default layout;\n","import moment from 'moment';\n\nconst initialData = {\n\n    itemTypes: [\"运动\", \"生活\", \"学习\", \"工作\", \"娱乐\"],\n    items: {\n        '1593920420073': {\n            id: '1593920420073',\n            created_timestamp: '1593920420073',\n            content: \"跑步\",\n            type: \"运动\",\n            due_date: moment().day(1),\n            sub_tasks: {},\n            done: false\n        },\n        '1593920427447': {\n            id: '1593920427447',\n            created_timestamp: '1593920420073',\n            content: \"混合有氧\",\n            type: \"运动\",\n            due_date: null,\n            sub_tasks: {},\n            done: false\n        },\n        '1593920442267': {\n            id: '1593920442267',\n            created_timestamp: '1593920420073',\n            content: \"洗牙\",\n            type: \"生活\",\n            due_date: null,\n            sub_tasks: {},\n            done: false\n        },\n        '1593988570469': {\n            id: '1593988570469',\n            created_timestamp: '1593988570469',\n            content: \"课程 MIT Introduction to Deep Learning\",\n            type: \"学习\",\n            due_date: moment().day(-2),\n            sub_tasks: {\n                '1': {\n                    content: \"第一集\",\n                    done: true\n                },\n                '2': {\n                    content: \"第二集\",\n                    done: false\n                },\n                '3': {\n                    content: \"第三集\",\n                    done: false\n                }\n            },\n            done: false\n        },\n        '1594592079699': {\n            id: '1594592079699',\n            created_timestamp: '1594592079699',\n            content: \"最后生还者2\",\n            type: \"娱乐\",\n            due_date: moment().day(30),\n            sub_tasks: {},\n            done: false\n        }\n    },\n\n    columns: {\n        'column-1': {\n            id: 'column-1',\n            title: '感兴趣',\n            taskIds: ['1593920420073', '1593920427447'],\n            itemToSubmit: {\n                id: null,\n                content: \"新任务\",\n                type: null,\n                created_timestamp: null,\n                done: false\n            },\n        },\n        'column-2': {\n            id: 'column-2',\n            title: '行动中',\n            taskIds: ['1593920442267', '1593988570469', '1594592079699'],\n            itemToSubmit: {\n                id: null,\n                content: \"新任务\",\n                type: null,\n                created_timestamp: null,\n                done: false\n            },\n        },\n        'column-3': {\n            id: 'column-3',\n            title: '完成',\n            taskIds: [],\n            itemToSubmit: {\n                id: null,\n                content: \"新任务\",\n                type: null,\n                created_timestamp: null,\n                done: false\n            },\n        }\n    },\n\n    columnOrder: ['column-1', 'column-2', 'column-3'],\n\n    editingItem: false,\n    itemUnderEditing: {},\n    dueDatePickFocused: false\n}\n\nexport default initialData;","import React from 'react';\nimport './ColumnHeader.css';\n\nconst columnHeader = (props) => {\n    return (\n        <div className='ColumnHeader'>\n            {props.children}\n            <p>({props.itemNum})</p>\n        </div>\n    );\n}\n\nexport default columnHeader;","import React from 'react';\nimport './TodoForm.css';\n\nconst todoForm = (props) => (\n    <div className='TodoForm'>\n        <form onSubmit={props.submitted}>\n            <input \n                placeholder={props.value}\n                value={props.value}\n                onChange={props.inputChanged}></input>\n            <button type=\"submit\">+</button>\n        </form>\n    </div>\n);\n\nexport default todoForm;","import React, {Component} from 'react';\nimport './TodoItems.css';\n\nclass todoItems extends Component {\n\n    render () {\n        return (\n            <div className=\"TodoItems\">\n                <h4>{this.props.key}</h4>\n                <ul>\n                    {this.props.children}\n                </ul>\n            </div>\n        );\n    }\n};\n\nexport default todoItems;","import React, { Component } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport moment from 'moment';\nimport Icon from '@material-ui/core/Icon';\nimport DirectionsRunIcon from '@material-ui/icons/DirectionsRun';\nimport ImportContactsIcon from '@material-ui/icons/ImportContacts';\nimport AirlineSeatIndividualSuiteIcon from '@material-ui/icons/AirlineSeatIndividualSuite';\nimport LaptopChromebookIcon from '@material-ui/icons/LaptopChromebook';\nimport SportsEsportsIcon from '@material-ui/icons/SportsEsports';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport './TodoItem.css';\n\nclass todoItem extends Component {\n\n    render() {\n\n        let icon;\n        switch (this.props.item.type) {\n            case \"运动\":\n                icon = <DirectionsRunIcon />;\n                break;\n            case \"生活\":\n                icon = <AirlineSeatIndividualSuiteIcon />;\n                break;\n            case \"学习\":\n                icon = <ImportContactsIcon />;\n                break;\n            case \"工作\":\n                icon = <LaptopChromebookIcon />;\n                break;\n            case \"娱乐\":\n                icon = <SportsEsportsIcon />;\n                break;\n            default:\n                icon = <Icon>star</Icon>;\n                break;\n        }\n\n        // Due date\n        let dueDate;\n        const currentDate = moment();\n        const duePassed = currentDate > this.props.item.due_date;\n\n        if (this.props.item.due_date && !duePassed) {\n            dueDate = <div className='DueDate good'>\n                        <AccessTimeIcon fontSize='small'/> \n                        <p>{this.props.item.due_date.format('L')}</p></div>;\n        } else if (this.props.item.due_date && duePassed) {\n            dueDate = <div className='DueDate passed'>\n                        <AccessTimeIcon fontSize='small'/> \n                        <p>{this.props.item.due_date.format('L')}</p></div>;\n        } else {\n            dueDate = null;\n        }\n\n        // Subtasks\n        let subTasks;\n        const subTaskObjects = this.props.item.sub_tasks;\n        const hasSubTasks = Object.entries(subTaskObjects).length !== 0; \n        if (hasSubTasks) {\n            const doneTasksCount = Object.keys(subTaskObjects).filter((subTaskKey, index) => \n                subTaskObjects[subTaskKey].done === true).length;\n            subTasks = <div className='SubTaskIcon'>\n                        <AssignmentTurnedInIcon fontSize='small'/>\n                        <p>{doneTasksCount}/{Object.keys(subTaskObjects).length}</p></div>\n        } else {\n            subTasks = null;\n        }\n\n        return (\n            <Draggable\n                draggableId={this.props.item.id.toString()}\n                index={this.props.index}>\n                    {(provided, snapshot) => (\n                        <div className={`TodoItem isDragging_${snapshot.isDragging}`}\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                            ref={provided.innerRef}>\n                            {icon}\n                            <p \n                                className={this.props.item.done ? 'done' : 'undone'}\n                                onClick={() => this.props.contentClicked(this.props.item.id)}>{this.props.item.content}</p>\n            \n                            <button\n                                type=\"button\" \n                                className=\"editButton\"\n                                onClick={() => this.props.editClicked(this.props.item.id)}><i className=\"fa fa-bars\"></i></button>\n                            <button \n                                type=\"button\" \n                                className=\"closeButton\"\n                                onClick={() => this.props.closeClicked(this.props.item.id, this.props.columnId)}><i className=\"fa fa-close\"></i></button>\n                            <div className=\"break\"></div>\n                            {dueDate}\n                            {subTasks}\n                        </div>\n                    )}\n            </Draggable>\n        );\n    };\n}\n\nexport default todoItem;","import React, {Component} from 'react';\nimport './Column.css';\nimport { Droppable } from 'react-beautiful-dnd';\nimport ColumnHeader from './ColumnHeader/ColumnHeader';\nimport TodoForm from './TodoForm/TodoForm';\nimport TodoItems from './TodoItems/TodoItems';\nimport TodoItem from './TodoItems/TodoItem/TodoItem';\n\nclass column extends Component {\n\n    render () {\n\n        const itemObjects = this.props.items;\n        const items = Object.keys(itemObjects).map((itemKey, index) => {\n            return <TodoItem \n                        columnId={this.props.column.id}\n                        key={itemObjects[itemKey].id} \n                        item={itemObjects[itemKey]} \n                        contentClicked={this.props.contentClicked} \n                        editClicked={this.props.editClicked} \n                        closeClicked={this.props.closeClicked}\n                        index={index}/>\n        })\n\n        return (\n            <div className='Column'>\n                <ColumnHeader\n                    itemNum={this.props.items.length}>\n                    <h3>{this.props.column.title}</h3></ColumnHeader>\n                <TodoForm \n                    value={this.props.column.itemToSubmit.content} \n                    inputChanged={(e) => this.props.formInputChanged(e,this. props.column.id)} \n                    submitted={(e) => this.props.submitted(e, this.props.column.id)}/>\n                <Droppable \n                    droppableId={this.props.column.id}>\n                    {(provided, snapshot) => (\n                        <div\n                            ref={provided.innerRef}\n                            {...provided.droppableProps}>\n                            <TodoItems>\n                                {items}\n                            </TodoItems>\n                            {provided.placeholder}\n                        </div>\n                        \n                    )}\n                </Droppable>\n            </div>\n        );\n    }\n}\n\nexport default column;","import React from 'react';\nimport './SubTask.css';\n\nconst subTask = (props) => {\n    return (\n        <div className='SubTask'>\n            <li><input \n                    type=\"checkbox\" \n                    checked={props.checked}\n                    onChange={() => props.subTaskClicked(props.subTaskKey)}/>{props.content}</li>\n        </div>\n    );\n}\n\nexport default subTask;\n\n","import React from 'react';\nimport './SubTasks.css';\nimport SubTask from './SubTask/SubTask';\n\nconst subTasks = (props) => {\n    return (\n        <div className='SubTasks'>\n            <p>子任务:</p> \n            <ul>\n                {props.children}\n            </ul>\n        </div>\n    );\n}\n\nexport default subTasks;","import React from 'react';\nimport 'react-dates/initialize';\nimport { SingleDatePicker } from 'react-dates';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport moment from 'moment';\nimport SubTasks from './SubTasks/SubTasks';\nimport SubTask from './SubTasks/SubTask/SubTask';\nimport './TodoItemSummary.css';\n\nconst todoItemSummary = (props) => {\n\n    const item = props.item;\n\n    const itemTypes = props.itemTypes;\n    const itemTypeOptions = itemTypes.map(t => {\n        if (item.type === t) {\n            return (\n                <option key={t} value={t} selected=\"selected\">{t}</option>\n            )\n        } else {\n            return (\n                <option key={t} value={t}>{t}</option>\n            )\n        }\n    });\n\n    let dueDate;\n    if (props.item.due_date) {\n        dueDate = props.item.due_date;\n    } else {\n        dueDate = null;\n    }\n\n    const subTaskObjects = props.item.sub_tasks;\n    let subTasks;\n    if (subTaskObjects) {\n        const hasSubTasks = Object.entries(subTaskObjects).length !== 0;\n        subTasks = Object.keys(subTaskObjects).map((subTaskKey) => {\n            return <SubTask \n                        key={subTaskKey}\n                        subTaskKey={subTaskKey}\n                        content={subTaskObjects[subTaskKey].content}\n                        checked={subTaskObjects[subTaskKey].done}\n                        subTaskClicked={props.subTaskClicked}/>\n        });\n    }\n\n    return (\n    \n        <div className='TodoItemSummary'>\n\n            <div className='Content'>\n                <form>\n                    <input \n                        value={props.item.content}\n                        onChange={props.itemSummaryContentChanged}></input>\n                </form>\n            </div>\n\n            <div className='Type'>\n                <form>\n                    <label>类别: </label>\n                    <select\n                        onChange={props.itemSummaryTypeChanged}>\n                        {itemTypeOptions}\n                    </select>\n                </form>\n            </div>\n\n            <div className=\"DueDatePick\">\n                <p>截止日期: </p>\n                <div className=\"Pick\">\n                    <SingleDatePicker\n                        date={dueDate} // momentPropTypes.momentObj or null\n                        onDateChange={(date) => props.itemDueDateChanged(date, item.id)} // PropTypes.func.isRequired\n                        focused={props.dueDatePickFocused} // PropTypes.bool\n                        onFocusChange={({ focused }) => props.itemDueDateFocusChanged({ focused })} // PropTypes.func.isRequired\n                        id=\"date_input\" // PropTypes.string.isRequired,\n                    />\n                    <DeleteIcon \n                        fontSize='medium'\n                        onClick={() => props.itemDueDateDeleted(item.id)}/>\n                </div>\n\n            </div>\n\n            <SubTasks>\n                {subTasks}\n            </SubTasks>\n\n            <button\n                type=\"button\"\n                className=\"saveButton\"\n                onClick={() => props.saveClicked(props.item)}>确定</button>\n            <button\n                type=\"button\" \n                className=\"cancelButton\"\n                onClick={() => props.cancelClicked()}>取消</button>\n        </div>\n\n    );\n};\n\nexport default todoItemSummary;","import React from 'react';\nimport './Modal.css';\n\nconst modal = (props) => (\n    <div\n        className='Modal'\n            style={{\n                transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                opacity: props.show ? '1' : '0'\n            }}>\n        {props.children}\n    </div>\n);\n\nexport default modal;","import React, {Component} from 'react';\nimport './TodoListBuilder.css';\nimport initialData from '../../initialData';\nimport 'react-dates/lib/css/_datepicker.css';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport Column from '../../components/TodoList/Column/Column';\nimport TodoItemSummary from '../../components/TodoList/Column/TodoItems/TodoItem/TodoItemSummary/TodoItemSummary';\nimport Modal from '../../components/UI/Modal/Modal';\n\nclass TodoList extends Component {\n\n    state = initialData;\n\n    onDragEnd = (result) => {\n        const { destination, source, draggableId } = result;\n\n        if (!destination) {\n            return;\n        }\n\n        if (destination.droppableId === source.droppableId &&\n            destination.index === source.index) {\n            return;\n        }\n\n        if (destination.droppableId === source.droppableId) {\n\n            const column = this.state.columns[source.droppableId];\n            const newTaskIds = Array.from(column.taskIds);\n            newTaskIds.splice(source.index, 1)\n            newTaskIds.splice(destination.index, 0, draggableId)\n\n            const newColumn = {\n                ... column,\n                taskIds: newTaskIds\n            };\n\n            const newState = {\n                ...this.state,\n                columns: {\n                    ...this.state.columns,\n                    [newColumn.id]: newColumn\n                }\n            };\n\n            this.setState(newState);\n        } else {\n\n            const sourceColumn = this.state.columns[source.droppableId];\n            const destinationColumn = this.state.columns[destination.droppableId];\n            const newSourceTaskIds = Array.from(sourceColumn.taskIds);\n            const newDestinationTaskIds = Array.from(destinationColumn.taskIds);\n\n            newSourceTaskIds.splice(source.index, 1)\n            newDestinationTaskIds.splice(destination.index, 0, draggableId)\n\n            const newSourceColumn = {\n                ... sourceColumn,\n                taskIds: newSourceTaskIds\n            };\n            const newDestinationColumn = {\n                ... destinationColumn,\n                taskIds: newDestinationTaskIds\n            };\n\n            const newState = {\n                ...this.state,\n                columns: {\n                    ...this.state.columns,\n                    [newSourceColumn.id]: newSourceColumn,\n                    [newDestinationColumn.id]: newDestinationColumn\n                }\n            };\n\n            this.setState(newState);\n        }\n\n    }\n\n    formInputChangeHandler = (event, columnId) => {\n        let columns = this.state.columns;\n        let column = {... columns[columnId]};\n        const newItemToSubmit = {\n            id: null,\n            created_timestamp: null,\n            content: event.target.value,\n            done: false\n        }\n        column.itemToSubmit = newItemToSubmit;\n        columns[columnId] = column;\n\n        this.setState({columns: columns})\n    }\n\n    addItemHandler = (event, columnId) => {\n        event.preventDefault();\n\n        let columns = this.state.columns;\n        let column = {... columns[columnId]};\n        const itemToSubmit = column.itemToSubmit;\n\n        if(itemToSubmit.content) {\n            let newItems = {... this.state.items};\n            const newId = Date.now().toString()\n            const newItem = {\n                id: newId,\n                created_timestamp: newId,\n                content: itemToSubmit.content,\n                done: false\n            }\n\n            column.taskIds.push(newItem.id);\n            columns[columnId] = column;\n\n            newItems[newId] = newItem;\n            this.setState({\n                items: newItems,\n                columns: columns});\n        }\n    }\n\n    removeItemHandler = (itemId, columnId) => {\n        // Need to remove from both items & columns.taskIds\n        let updatedItems = {... this.state.items};\n        delete updatedItems[itemId];\n\n        let columns = this.state.columns;\n        let updatedColumn = {... columns[columnId]};\n        const updatedTaskIds = updatedColumn.taskIds.filter(id =>\n            id !== itemId \n        );\n        updatedColumn.taskIds = updatedTaskIds;\n        columns[columnId] = updatedColumn;\n\n        console.log(columns);\n\n        this.setState({\n            items: updatedItems,\n            columns: columns\n        });\n    }\n\n    editItemHandler = (itemId) => {\n        const items = {\n            ... this.state.items\n        };\n        const itemUnderEditing = {\n            ... items[itemId],\n            sub_tasks: {... items[itemId].sub_tasks}\n        };\n\n        this.setState({\n            editingItem: true,\n            itemUnderEditing: {... itemUnderEditing}\n        })\n    }\n\n    revertItemDoneHandler = (itemId) => {\n        let updatedItems = {... this.state.items};\n        let updatedItem = updatedItems[itemId];\n        updatedItem.done = !updatedItem.done;\n\n        this.setState({items: updatedItems});\n    }\n\n    // Item Summary Modal\n    itemSummaryContentChangeHandler = (event) => {\n        let itemUnderEditing = this.state.itemUnderEditing;\n        itemUnderEditing.content = event.target.value;\n\n        this.setState({itemUnderEditing: itemUnderEditing})\n    }\n\n    itemSummaryTypeChangeHandler = (event) => {\n        const itemUnderEditing = this.state.itemUnderEditing;\n        const newItemUnderEditing = {\n            ... itemUnderEditing,\n            type: event.target.value\n        }\n\n        this.setState({itemUnderEditing: newItemUnderEditing})\n    }\n\n    itemDueDateChangeHandler = (date, itemId)  => {\n        const itemUnderEditing = this.state.itemUnderEditing;\n        const newItemUnderEditing = {\n            ... itemUnderEditing,\n            due_date: date\n        }\n\n        this.setState({itemUnderEditing: newItemUnderEditing})\n    }\n\n    itemDueDateFocusChangeHandler = ({ focused })  => {\n        this.setState({ dueDatePickFocused: focused });\n    }\n\n    itemDueDateDeleteHandler = () => {\n        const itemUnderEditing = this.state.itemUnderEditing;\n        const newItemUnderEditing = {\n            ... itemUnderEditing,\n            due_date: null\n        }\n\n        this.setState({itemUnderEditing: newItemUnderEditing})\n    }\n\n    itemSubTaskClickHandler = (subTaskKey) => {\n        const itemUnderEditing = this.state.itemUnderEditing;\n\n        const newSubTask = {\n            ... itemUnderEditing.sub_tasks[subTaskKey],\n            done: !itemUnderEditing.sub_tasks[subTaskKey].done\n        }\n        let newSubTasks = itemUnderEditing.sub_tasks;\n        newSubTasks[subTaskKey] = newSubTask;\n\n        const newItemUnderEditing = {\n            ... itemUnderEditing,\n            sub_tasks: newSubTasks\n        }\n        this.setState({itemUnderEditing: newItemUnderEditing})\n    }\n\n    editItemSaveHandler = (item) => {\n        let items = {... this.state.items};\n        items[item.id] = item;\n        \n        this.setState({\n            items: items,\n            editingItem: false,\n            itemUnderEditing: {}\n        })\n    }\n\n    editItemCancelHandler = () => {\n\n        this.setState({\n            editingItem: false,\n            itemUnderEditing: {}\n        })\n    }\n\n    render () {\n        const columns = this.state.columnOrder.map(columnId => {\n            const column = this.state.columns[columnId];\n            const items = column.taskIds.map(taskId => this.state.items[taskId]);\n\n            return <Column \n                        key={column.id}\n                        column={column}\n                        formInputChanged={this.formInputChangeHandler} \n                        submitted={this.addItemHandler}\n                        items={items} \n                        contentClicked={this.revertItemDoneHandler} \n                        editClicked={this.editItemHandler}\n                        closeClicked={this.removeItemHandler}/>\n        })\n\n        return (\n            <div className='TodoListBuilder'>\n                <Modal show={this.state.editingItem}>\n                    <TodoItemSummary \n                        itemTypes={this.state.itemTypes}\n                        item={this.state.itemUnderEditing}\n                        dueDatePickDate={this.state.dueDatePickDate}\n                        dueDatePickFocused={this.state.dueDatePickFocused}\n                        itemSummaryContentChanged={this.itemSummaryContentChangeHandler}\n                        itemSummaryTypeChanged={this.itemSummaryTypeChangeHandler}\n                        itemDueDateChanged={this.itemDueDateChangeHandler}\n                        itemDueDateFocusChanged={this.itemDueDateFocusChangeHandler}\n                        itemDueDateDeleted={this.itemDueDateDeleteHandler}\n                        subTaskClicked={this.itemSubTaskClickHandler}\n                        saveClicked={this.editItemSaveHandler}\n                        cancelClicked={this.editItemCancelHandler}/>\n                </Modal>\n\n                <DragDropContext\n                    onDragEnd={this.onDragEnd}>\n                    {columns}\n                </DragDropContext>\n            </div>\n        )\n    }\n\n}\n\nexport default TodoList;","import React from 'react';\nimport './App.css';\nimport Layout from './components/Layout/Layout';\nimport TodoListBuilder from './containers/TodoListBuilder/TodoListBuilder';\n\nfunction App() {\n  return (\n    <div>\n      <Layout>\n        <TodoListBuilder />\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}