{"version":3,"sources":["components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/Navigation.js","components/Layout/Layout.js","components/TodoList/TodoItems/TodoItem/TodoItem.js","components/TodoList/TodoItems/TodoItems.js","components/TodoList/TodoForm/TodoForm.js","components/TodoList/TodoItems/TodoItem/TodoItemSummary/TodoItemSummary.js","components/UI/Modal/Modal.js","containers/TodoListBuilder/TodoListBuilder.js","App.js","serviceWorker.js","index.js"],"names":["navigationItem","props","className","href","link","active","children","navigationItems","navigation","layout","todoItem","icon","item","type","Icon","done","onClick","contentClicked","id","content","editClicked","closeClicked","todoItems","items","map","key","todoForm","onSubmit","submitted","placeholder","value","onChange","inputChanged","todoItemSummary","itemTypeOptions","itemTypes","t","selected","itemSummaryContentChanged","itemSummaryTypeChanged","saveClicked","cancelClicked","modal","style","transform","show","opacity","TodoList","state","itemToSubmit","created_timestamp","editingItem","itemUnderEditing","inputChangeHandler","event","newItemToSubmit","target","setState","addItemHandler","preventDefault","newItems","push","Date","now","removeItemHandler","itemId","updatedItems","filter","editItemHandler","find","revertItemDoneHandler","updatedItem","itemSummaryContentChangeHandler","itemSummaryTypeChangeHandler","editItemSaveHandler","previousItem","i","previousItemIndex","indexOf","editItemCancelHandler","this","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4d852caa.chunk.js","sourcesContent":["import React from 'react';\nimport './NavigationItem.css';\n\nconst navigationItem = (props) => (\n    <li className='NavigationItem'>\n        <a \n            href={props.link}\n            className={props.active ? 'active' : null}>{props.children}</a>\n    </li>\n);\n\nexport default navigationItem;","import React from 'react'\nimport './NavigationItems.css';\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nconst navigationItems = (props) => (\n    <ul className='NavigationItems'>\n        <NavigationItem link=\"/\" active={true}>主页</NavigationItem>\n    </ul>\n);\n\nexport default navigationItems;","import React from 'react';\nimport './Navigation.css';\nimport NavigationItems from './NavigationItems/NavigationItems';\n\nconst navigation = () => (\n    <header className='Navigation'>\n        {/* <div>MENU</div> */}\n        <nav>\n            <NavigationItems />\n        </nav>\n    </header>\n);\n\nexport default navigation;","import React from 'react';\nimport './Layout.css';\nimport Navigation from '../Navigation/Navigation';\n\nconst layout = (props) => {\n\n    return (\n        <div>\n            <Navigation />\n            <main className=\"Content\">\n                {props.children}\n            </main>\n        </div>\n    )\n};\n\nexport default layout;\n","import React from 'react';\nimport Icon from '@material-ui/core/Icon';\nimport DirectionsRunIcon from '@material-ui/icons/DirectionsRun';\nimport ImportContactsIcon from '@material-ui/icons/ImportContacts';\nimport AirlineSeatIndividualSuiteIcon from '@material-ui/icons/AirlineSeatIndividualSuite';\nimport LaptopChromebookIcon from '@material-ui/icons/LaptopChromebook';\nimport SportsEsportsIcon from '@material-ui/icons/SportsEsports';\nimport './TodoItem.css';\n\nconst todoItem = (props) => {\n\n    let icon;\n    switch (props.item.type) {\n        case \"运动\":\n            icon = <DirectionsRunIcon />;\n            break;\n        case \"生活\":\n            icon = <AirlineSeatIndividualSuiteIcon />;\n            break;\n        case \"学习\":\n            icon = <ImportContactsIcon />;\n            break;\n        case \"工作\":\n            icon = <LaptopChromebookIcon />;\n            break;\n        case \"娱乐\":\n            icon = <SportsEsportsIcon />;\n            break;\n        default:\n            icon = <Icon>star</Icon>;\n            break;\n    }\n\n    return (\n        <div className=\"TodoItem\">\n            {icon}\n            <p \n                className={props.item.done ? 'done' : 'undone'}\n                onClick={() => props.contentClicked(props.item.id)}>{props.item.content}</p>\n\n            <button\n                type=\"button\" \n                className=\"editButton\"\n                onClick={() => props.editClicked(props.item.id)}><i className=\"fa fa-bars\"></i></button>\n            <button \n                type=\"button\" \n                className=\"closeButton\"\n                onClick={() => props.closeClicked(props.item.id)}><i className=\"fa fa-close\"></i></button>\n        </div>\n    );\n};\n\nexport default todoItem;","import React from 'react';\nimport './TodoItems.css';\nimport TodoItem from './TodoItem/TodoItem';\n\nconst todoItems = (props) => {\n\n    const items = props.items.map(item =>{\n        return <TodoItem \n                    key={item.id} \n                    item={item} \n                    contentClicked={props.contentClicked} \n                    editClicked={props.editClicked} \n                    closeClicked={props.closeClicked}/>\n    })\n\n    return (\n        <div className=\"TodoItems\">\n            <ul>\n                {items}\n            </ul>\n        </div>\n    );\n};\n\nexport default todoItems;","import React from 'react';\nimport './TodoForm.css';\n\nconst todoForm = (props) => (\n    <div className='TodoForm'>\n        <form onSubmit={props.submitted}>\n            <input \n                placeholder={props.value}\n                value={props.value}\n                onChange={props.inputChanged}></input>\n            <button type=\"submit\">+</button>\n        </form>\n    </div>\n);\n\nexport default todoForm;","import React from 'react';\nimport './TodoItemSummary.css';\n\nconst todoItemSummary = (props) => {\n\n    const item = props.item;\n\n    const itemTypes = props.itemTypes;\n    const itemTypeOptions = itemTypes.map(t => {\n        if (item.type === t) {\n            return (\n                <option key={t} value={t} selected=\"selected\">{t}</option>\n            )\n        } else {\n            return (\n                <option key={t} value={t}>{t}</option>\n            )\n        }\n    });\n\n    return (\n\n        <div className='TodoItemSummary'>\n\n            <form>\n                <label>内容：</label>\n                <input \n                    value={props.item.content}\n                    onChange={props.itemSummaryContentChanged}></input>\n            </form>\n\n            <form>\n                <label>类别：</label>\n                <select\n                    onChange={props.itemSummaryTypeChanged}>\n                    {itemTypeOptions}\n                </select>\n            </form>\n\n            <button\n                type=\"button\"\n                className=\"saveButton\"\n                onClick={() => props.saveClicked(props.item)}>确定</button>\n            <button\n                type=\"button\" \n                className=\"cancelButton\"\n                onClick={() => props.cancelClicked()}>取消</button>\n        </div>\n\n    );\n};\n\nexport default todoItemSummary;","import React from 'react';\nimport './Modal.css';\n\nconst modal = (props) => (\n    <div\n        className='Modal'\n            style={{\n                transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                opacity: props.show ? '1' : '0'\n            }}>\n        {props.children}\n    </div>\n);\n\nexport default modal;","import React, {Component} from 'react';\nimport './TodoListBuilder.css';\nimport TodoItems from '../../components/TodoList/TodoItems/TodoItems';\nimport TodoForm from '../../components/TodoList/TodoForm/TodoForm';\nimport TodoItemSummary from '../../components/TodoList/TodoItems/TodoItem/TodoItemSummary/TodoItemSummary';\nimport Modal from '../../components/UI/Modal/Modal';\n\nclass TodoList extends Component {\n\n    state = {\n        itemToSubmit: {\n            id: null,\n            content: \"新任务\",\n            type: null,\n            created_timestamp: null,\n            done: false\n        },\n\n        itemTypes: [\"运动\", \"生活\", \"学习\", \"工作\", \"娱乐\"],\n\n        items: [\n            {\n                id: 1593920420073,\n                created_timestamp: 1593920420073,\n                content: \"跑步\",\n                type: \"运动\",\n                done: false\n            },\n            {\n                id: 1593920427447,\n                created_timestamp: 1593920420073,\n                content: \"混合有氧\",\n                type: \"运动\",\n                done: false\n            },\n            {\n                id: 1593920442267,\n                created_timestamp: 1593920420073,\n                content: \"洗牙\",\n                type: \"生活\",\n                done: false\n            },\n            {\n                id: 1593988570469,\n                created_timestamp: 1593988570469,\n                content: \"看书\",\n                type: \"学习\",\n                done: false\n            }\n        ],\n\n        editingItem: false,\n        itemUnderEditing: {}\n    }\n\n    inputChangeHandler = (event) => {\n        const newItemToSubmit = {\n            id: null,\n            created_timestamp: null,\n            content: event.target.value,\n            done: false\n        }\n\n        this.setState({itemToSubmit: newItemToSubmit})\n    }\n\n    addItemHandler = (event) => {\n        event.preventDefault();\n        const itemToSubmit = this.state.itemToSubmit;\n\n        if(itemToSubmit.content) {\n            let newItems = [... this.state.items];\n            newItems.push({\n                id: Date.now(),\n                created_timestamp: Date.now(),\n                content: itemToSubmit.content,\n                done: false\n            });\n            this.setState({items: newItems});\n        }\n    }\n\n    removeItemHandler = (itemId) => {\n        const items = [... this.state.items]\n        const updatedItems = items.filter(item => \n                                item.id !== itemId);\n\n        this.setState({items: updatedItems});\n    }\n\n    editItemHandler = (itemId) => {\n        const items = [... this.state.items]\n        const itemUnderEditing = items.find(item => item.id === itemId);\n\n        this.setState({\n            editingItem: true,\n            itemUnderEditing: {... itemUnderEditing}\n        })\n    }\n\n    revertItemDoneHandler = (itemId) => {\n        let updatedItems = [... this.state.items];\n        let updatedItem = updatedItems.find(item => item.id === itemId);\n        updatedItem.done = !updatedItem.done;\n\n        this.setState({items: updatedItems});\n    }\n\n    itemSummaryContentChangeHandler = (event) => {\n        let itemUnderEditing = this.state.itemUnderEditing;\n        itemUnderEditing.content = event.target.value;\n\n        this.setState({itemUnderEditing: itemUnderEditing})\n    }\n\n    itemSummaryTypeChangeHandler = (event) => {\n        let itemUnderEditing = this.state.itemUnderEditing;\n        itemUnderEditing.type = event.target.value;\n\n        this.setState({itemUnderEditing: itemUnderEditing})\n    }\n\n    editItemSaveHandler = (item) => {\n        let items = [... this.state.items];\n        const previousItem = items.find(i =>\n            i.id === item.id);\n        const previousItemIndex = items.indexOf(previousItem);\n        items[previousItemIndex] = item;\n        \n        this.setState({\n            items: items,\n            editingItem: false,\n            itemUnderEditing: {}\n        })\n    }\n\n    editItemCancelHandler = () => {\n\n        this.setState({\n            editingItem: false,\n            itemUnderEditing: {}\n        })\n    }\n\n    render () {\n        return (\n            <div className='TodoListBuilder'>\n                <Modal show={this.state.editingItem}>\n                    <TodoItemSummary \n                        itemTypes={this.state.itemTypes}\n                        item={this.state.itemUnderEditing}\n                        itemSummaryContentChanged={this.itemSummaryContentChangeHandler}\n                        itemSummaryTypeChanged={this.itemSummaryTypeChangeHandler}\n                        saveClicked={this.editItemSaveHandler}\n                        cancelClicked={this.editItemCancelHandler}/>\n                </Modal>\n\n                <h4>任务清单</h4>\n                <TodoForm \n                    value={this.state.itemToSubmit.content} \n                    inputChanged={this.inputChangeHandler} \n                    submitted={this.addItemHandler}/>\n                <TodoItems \n                    items={this.state.items} \n                    contentClicked={this.revertItemDoneHandler} \n                    editClicked={this.editItemHandler}\n                    closeClicked={this.removeItemHandler}/>\n            </div>\n        )\n    }\n\n}\n\nexport default TodoList;","import React from 'react';\nimport './App.css';\nimport Layout from './components/Layout/Layout';\nimport TodoListBuilder from './containers/TodoListBuilder/TodoListBuilder';\n\nfunction App() {\n  return (\n    <div>\n      <Layout>\n        <TodoListBuilder />\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}